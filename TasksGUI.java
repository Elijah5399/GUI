/**
 *
 * @author elijahchia
 */
public class TasksGUI extends javax.swing.JFrame {
    String[][] tasksAndPowerConsumption;
    javax.swing.DefaultListModel<String> listModel;

    /**
     * Creates new form TasksGUI
     * @param tasksAndPowerConsumption The 3d array of strings obtained
     * from the parsed powermetrics output.
     */
    public TasksGUI(String[][] tasksAndPowerConsumption) {
        //listModel represents the contents of the taskList JList.
        this.listModel = new javax.swing.DefaultListModel<>();
        this.tasksAndPowerConsumption = tasksAndPowerConsumption;
        for (int i = 0; i < tasksAndPowerConsumption.length; i++) {
            this.listModel.addElement(tasksAndPowerConsumption[i][0]);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        chooseMessage = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        taskList = new javax.swing.JList<>();
        powerConsMsg = new javax.swing.JLabel();
        powerDisplay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Power Tracker");
        setSize(new java.awt.Dimension(200, 200));

        chooseMessage.setText("Choose the application you want to find the power consumption for.");

        taskList.setModel(listModel);
        taskList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taskList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                changePower(evt);
            }
        });
        scrollPane.setViewportView(taskList);

        powerConsMsg.setText("The power consumption of this application is ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(86, 86, 86)
                                                .addComponent(chooseMessage))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(136, 136, 136)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(powerConsMsg))
                                                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(242, 242, 242)
                                                .addComponent(powerDisplay)))
                                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(chooseMessage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(powerConsMsg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(powerDisplay)
                                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * A handler method which checks for any change in the JList selection,
     * and accordingly changes the JLabel powerDisplay to the corresponding CPU Usage.
     * @param evt ListSelectionEvent
     */
    private void changePower(javax.swing.event.ListSelectionEvent evt) {
        int index = evt.getFirstIndex();
        String power = this.tasksAndPowerConsumption[index][1];
        powerDisplay.setText(power);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel chooseMessage;
    private javax.swing.JLabel powerConsMsg;
    private javax.swing.JLabel powerDisplay;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JList<String> taskList;
    // End of variables declaration                   
}